parameters:
    transport_dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
    secret_webhook_user_update_or_create: '%env(SECRET_WEBHOOK_USER_UPDATE_OR_CREATE)%'
    secret_webhook_user_delete: '%env(SECRET_WEBHOOK_USER_DELETE)%'
    clerk_publishable_key: '%env(CLERK_PUBLISHABLE_KEY)%'
    auth_admin_key: '%env(AUTH_ADMIN_KEY)%'
    front_url: '%env(FRONT_URL)%'

services:
    _defaults:
        autowire: true
        autoconfigure: true
        bind:
            string $transportDsn: '%transport_dsn%'
            string $secretWebhookUserUpdateOrCreate: '%secret_webhook_user_update_or_create%'
            string $secretWebhookUserDelete: '%secret_webhook_user_delete%'
            string $clerkPublishableKey: '%clerk_publishable_key%'
            string $authAdminKey: '%auth_admin_key%'
            string $frontUrl: '%front_url%'

    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    Aws\S3\S3Client:
        arguments:
            -   version: 'latest'
                region: '%env(S3_REGION)%'
                endpoint: '%env(S3_ENDPOINT)%'
                use_path_style_endpoint: true
                credentials:
                    key: '%env(S3_ACCESS_KEY)%'
                    secret: '%env(S3_SECRET_KEY)%'
                    
    App\EventListener\JwtResponseListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }
